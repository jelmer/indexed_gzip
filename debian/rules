#!/usr/bin/make -f

srcpkg = $(shell LC_ALL=C dpkg-parsechangelog | grep '^Source:' | cut -d ' ' -f 2,2)
debver = $(shell LC_ALL=C dpkg-parsechangelog | grep '^Version:' | cut -d ' ' -f 2,2 )
upstreamver = $(shell echo $(debver) | cut -d '-' -f 1,1 )

# this figures out the last merge point from 'master' into the Debian branch and
# then described this commit relative to the last release tag (V...)
# If this should make any sense the local upstream branch must track upstream's
# master or whatever other source branch.
gitver = $(shell [ -x /usr/bin/git ] && git describe --tags --match 'v[0-9].*' $$(git merge-base -a HEAD upstream) | sed -e 's/^v//' -e 's/-/+git/')

export DH_VERBOSE = 1
export PYBUILD_NAME = indexed-gzip

# one ring to rule them all ...
%:
	dh $@ --with python2,python3 --buildsystem=pybuild


clean::
	python setup.py clean
	dh_clean
	# Ahhhhhhh!
	rm -rf .pybuild build
	-rm -rf indexed_gzip.egg-info/
	# tests leave a bit of trash behind
	-rm ctest_*.gz

# explicitely run the tests via distutils,as the maintainer appears to be
# too stupid to understand how to get pybuild to not fail on test invocation
override_dh_auto_test:
	python2 setup.py test --addopts '--niter 1'
	python3 setup.py test --addopts '--niter 1'

override_dh_install:
	dh_install
	# to get the ABI dependency
	dh_numpy

# make orig tarball from repository content
get-orig-source:
	# orig tarball, turn directory into something nicer
	git archive --format=tar --prefix=$(srcpkg)-$(gitver)/ HEAD | \
		gzip -9 > $(srcpkg)_$(gitver).orig.tar.gz

# check that DSC patches still apply
maint-check-dsc-patches:
	@for p in debian/patches/*-dsc-patch; \
		do echo "check $$p"; \
		patch -p1 --dry-run < $$p || exit 1 ; \
	done

